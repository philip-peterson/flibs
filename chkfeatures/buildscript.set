# buildscript.inp --
#     Define the names of the source files to be handled and the error messages
#     that should be printed if building the program fails (note: not always
#     a negative thing - the compiler may be checking questionable practices)
#
#     TODO:
#     - maybe a descriptive string after the file name?
#     - count the number of successfully created programs
#       requires a category (FEATURE, DIAGNOSTIC, ... or some such)
#       FEATURE    - test for a particular syntactic feature
#       DIAGNOSTIC - test if the compiler recognises certain (deliberate) coding error
#       PROBE      - test the behaviour of the program
#       EXTENSION  - test for a well-known extension
#     - more feedback to the user during the run
#     - summary of failed programs
#
#     - last write with advance = 'no': file closed with newline anyway?
#
#     - execute_command_line
#     - array operations on large arrays (temporaries can exhaust the stack)
#     - UNICODE
#     - object-oriented features (a.o. finalisers)
#     - user-defined derived type output
#     - type(integer)
#     - ISO_C_BINDING, IO_FORTRAN_ENV
#     - new intrinsic routines (most mathematical functions implemented - norm2 and hypot still to be done)
#     - real(dp) with "accurate" single-precision constant
#     - real(sp) with double-precision constant
#     - (diagnostic) array size mismatch with subroutine (using fixed size in subroutine)
#     - (diagnostic) character length size mismatch with subroutine (using fixed length in subroutine)
#     - (diagnostic) interface check for subroutine (in same file, not in module)
#     - (diagnostic) external subroutine versus external function
#     - automatic definition derived types: type x; integer :: y = 1 end type - reset on entry into a subroutine?
#       --> extend this program
#     - Z format to get "strange" characters in?
#     - "all" features in the overview tables from Fortran Forum
#     - static versus automatic for local variables
#     - tab characters in input - how does it react?
#     - ieee_value
#     - does the compiler give warnings on functions that do not set the value?
#     - CHARACTER*10 length mismatch
#     - warnings about inappropriate use of dummy arguments (setting intent(in) arguments,
#       using intent(out) arguments before they are set)
#
#     - array constructor like ['A', 'BC', 'DEF'] - force a length?
#
#     - extend chk_flush_check - check that the file is not flushed if no flush used.
#     - extend chk_stream_access - position, determine unit of position
#
#     - check: i0 for input? Is that standard?
#     - check: recursive IO (two levels - 2003 and 2008)
#
@chk_newunit
FEATURE
The compiler does not support OPEN( NEWUNIT = ... )

@chk_block
FEATURE
The compiler does not support the BLOCK ... END BLOCK construct

@chk_longint
FEATURE
The compiler does not support integers with a range larger than default

@chk_quadreal
FEATURE
The compiler does not support reals with a precision larger than double precision

@chk_quadcomplex
FEATURE
The compiler does not support complex numbers with a precision larger than double precision

@chk_opentwice
PROBE
Error compiling the program - check the code

@chk_associate
FEATURE
The compiler does not support the ASSOCIATE ... END ASSOCIATE construct

@chk_allocstring
FEATURE
The compiler does not support character strings with allocatable length

@chk_allocstring_deriv
FEATURE
The compiler does not support derived types with allocatable-length character strings

@chk_auto_realloc
PROBE
Error compiling the program - check the code

@chk_diff_lengths
EXTENSION
The compiler does not support array constructors containing strings of different lengths

@chk_do_concurrent
FEATURE
The compiler does not support the DO CONCURRENT ... ENDDO construct

@chk_square_brackets
FEATURE
The compiler does not support square brackets for array constructors

@chk_internal_routine_arg
FEATURE
The compiler does not support passign internal routines as actual arguments

@chk_format_static
PROBE
The compiler statically detects type errors in the format to a WRITE statement

@chk_bessel
FEATURE
The compiler does not support the Bessel functions (intrinsic functions in Fortran 2008)

@chk_erf
FEATURE
The compiler does not support all of the error functions (intrinsic functions in Fortran 2008)

@chk_gamma
FEATURE
The compiler does not support the Gamma functions (intrinsic functions in Fortran 2008)

@chk_norm2_hypot
FEATURE
The compiler does not support the NORM2 or HYPOT functions (intrinsic functions in Fortran 2008)

@chk_g0_format
FEATURE
The compiler does not support the G0 format

#@chk_i0_format
#EXTENSION
#The compiler does not allow the I0 format for input

@chk_array_bound_static
PROBE
The compiler does a static check on array bounds

@chk_end_of_line
PROBE
The compiler does not support stream access
This program cannot check this particular feature

@chk_get_argument
FEATURE
The compiler does not support the GET_COMMAND_ARGUMENT routine

@chk_flush
FEATURE
The compiler does not support the FLUSH statement

@chk_flush_check
FEATURE
The compiler does not support the FLUSH statement or it does not
support the intrinsic routines get_command_argument or execute_command_line
(see the program code)

@chk_advance_no
FEATURE
The compiler does not support the ADVANCE= option to the WRITE statement

@chk_file_incomplete
PROBE
Please check the error messages - the code should be acceptable

@chk_get_env
FEATURE
The compiler does not support the GET_ENVIRONMENT_VARIABLE subroutine

@chk_fortran_env
FEATURE
The compiler does not support the ISO_FORTRAN_ENV intrinsic module

@chk_iso_fortran_kinds
FEATURE
The compiler does not support the ISO_FORTRAN_ENV intrinsic module or it does
not support the kinds arrays defined by Fortran 2008

@chk_iso_fortran_storage
FEATURE
The compiler does not support the ISO_FORTRAN_ENV intrinsic module or it does
not support the storage parameters defined by Fortran 2008

@chk_compiler_version
FEATURE
The compiler does not support the intrinsic routines COMPILER_VERSION
and COMPILER_OPTIONS

@chk_allocate_source
FEATURE
The compiler does not support the SOURCE argument to ALLOCATE

@chk_allocate_mold
FEATURE
The compiler does not support the MOLD argument to ALLOCATE

@chk_decimal_io
FEATURE
The compiler does not support the DECIMAL specifier in READ/WRITE statements

@chk_round_io
FEATURE
The compiler does not support the ROUND or SIGN specifiers in READ/WRITE

@chk_tab_io
PROBE
Please check the error messages - the code should be acceptable

@chk_iomsg
FEATURE
The compiler does not support the IOSMG= keyword in READ/WRITE statements

@chk_stream_access
FEATURE
The compiler does not support stream accesss

@chk_protected
FEATURE
The compiler does not support the PROTECTED attribute

@chk_protected_set
FEATURE
The compiler either does not support the PROTECTED attribute or
it flags attempts to set protected module variables as errors

@chk_character_func
FEATURE
The compiler does not support functions returning strings with
allocatable length

@chk_unused_variable
DIAGNOSTIC
The compiler seems to regard unused variables as an error

@chk_unused_argument
DIAGNOSTIC
The compiler seems to regard unused arguments as an error

@chk_interface_mismatch
DIAGNOSTIC
The compiler seems to regard interface mismatches to be an error

@chk_contiguous
FEATURE
The compiler does not support the CONTIGUOUS attribute

@chk_is_contiguous
FEATURE
The compiler does not support the IS_CONTIGUOUS intrinsic function

@chk_contiguous_non
DIAGNOSTIC
The compiler does not support the CONTIGUOUS attribute or it detected
that the arrays passed to the subroutine are not contiguous

@chk_constructor_mismatch
DIAGNOSTIC
The compiler regards shape mismatches at array assignment as an error

@chk_move_alloc
FEATURE
The compiler does not support the MOVE_ALLOC intrinsic subroutine

@chk_submodule
FEATURE
The compiler does not support submodules

@chk_int_too_large
DIAGNOSTIC
The compiler does not accept integer values exceeding the limits

@chk_real_literal
PROBE
Please check the error messages - the code should be acceptable

@chk_dim_7
FEATURE
The compiler does not support arrays with seven dimensions or more

@chk_dim_15
FEATURE
The compiler does not support arrays with 15 dimensions or more

@chk_long_statement
FEATURE
The compiler does not support statements of 40 lines or longer

@chk_init_derived
PROBE
Please check the error messages - the code should be acceptable

# Courtesy of Ian Chivers
@ch0509
PROBE
Please check the error messages - the code should be acceptable

@chk_isnan
FEATURE
The compiler does not support the ieee_is_nan function

@chk_ieee_support
FEATURE
The compiler does not support the ieee_arithmetic or ieee_exceptions modulestop

@chk_complex
FEATURE
The compiler does not support the %RE and %IM syntax for complex numbers

@chk_hyperbolic
FEATURE
The compiler does not support the hyperbolic or inverse hyperbolic functions
for complex arguments

@chk_inverse_hyperbolic
FEATURE
The compiler does not support the inverse hyperbolic functions for
real arguments

@chk_stop_code
FEATURE
The compiler does not support a code with the STOP statement

@chk_param_derived
FEATURE
The compiler does not support parameterised derived types

@chk_hollerith
FEATURE
The compiler does not seem to accept Hollerith constants

@chk_charset
FEATURE
The compiler does not support the selected_char_kind function

@chk_io_encoding
FEATURE
The compiler does not support the encoding keyword

@chk_findloc
FEATURE
The compiler does not support the FINDLOC function

@chk_char_maxval
FEATURE
The compiler does not support the maxval/maxloc/minval/minloc functions
on character strings

@chk_boz_values
FEATURE
The compiler does not support BOZ values in the int/real/dble/cmplx functions

@chk_public_private
FEATURE
The compiler does not support public entities with a private type

@chk_alloc_message
FEATURE
The compiler does not support the ERRMSG keyword for the allocate statement

@chk_io_infinity
PROBE
Please check the error messages - the code should be acceptable

@chk_non_intrinsic
FEATURE
The compiler does not support the NON_INTRINSIC keyword for the USE statement

@chk_recursive_alloc
FEATURE
The compiler does not support types with a recursive allocatable component

@chk_pointer_dim
FEATURE
The compiler does not support associated multidimensional pointers with
one-dimensional arrays

@chk_pointer_init
FEATURE
The compiler does not support pointer initialisation

@chk_type_intrinsic
FEATURE
The compiler does not support the type(intrinsic) syntax

@chk_index_long
FEATURE
The compiler does not support the use of indices of non-default kind

@chk_lbound_long_error
DIAGNOSTIC
The compiler does a range check on the LBOUND function

@chk_alloc_long
FEATURE
The compiler does not support array allocation with indices of non-default kind

#
# This program must be called twice to identify the behaviour of the random number generator,
# more specifically: how it is initialised.
#
@chk_random_number
PROBE
Please check the error messages - the code should be acceptable

@chk_random_number
PROBE
Please check the error messages - the code should be acceptable

@chk_inquire_size
FEATURE
The compiler does not support the SIZE= keyword in the INQUIRE statement

# This is a F2003 feature - F2008 extends it
@chk_pointer_rank
FEATURE
The compiler does not allow a 2D pointer to be associated with a 1D array

@chk_implied_shape
FEATURE
The compiler does not support implied shape arrays (parameter arrays with automatic size)

@chk_pointer_function
FEATURE
The compiler does not support pointer functions

@chk_unlimited_format
FEATURE
The compiler does not support the unlimited format feature

@chk_exit_if
FEATURE
The compiler does not support EXIT from any named construct

@chk_bitwise_compare
FEATURE
The compiler does not support the bitwise comparison functions (BGE etc.)

@chk_maxloc_backward
FEATURE
The compiler does not support the BACK argument to the MINLOC or MAXLOC functions

@chk_null_as_absent
FEATURE
The compiler does not support NULL pointers as representing a missing argument
